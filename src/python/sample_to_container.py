#!/usr/bin/env python3

import sys

from clarity import Clarity

if __name__ == "__main__":
    if len(sys.argv) == 2:
        root_url = sys.argv[1]
    else:
        sys.stderr.write("usage: python list_epp.py <root_uri>\n")
        sys.exit(1)

    clarity = Clarity(root_url)

    samples = 'SH8351A9,SH8351A8,SH8351A7,SH8351A6,SH8351A5,SH8351A4,SH8351A3,SH8351A21,SH8351A20,SH8351A2,SH8351A19,SH8351A18,SH8351A17,SH8351A16,SH8351A15,SH8351A14,SH8351A13,SH8351A12,SH8351A11,SH8351A10,SH8351A1,SH4201A99,SH4201A98,SH4201A97,SH4201A96,SH4201A95,SH4201A94,SH4201A93,SH4201A92,SH4201A91,SH4201A90,SH4201A9,SH4201A89,SH4201A88,SH4201A87,SH4201A86,SH4201A85,SH4201A84,SH4201A83,SH4201A82,SH4201A81,SH4201A80,SH4201A8,SH4201A79,SH4201A78,SH4201A77,SH4201A76,SH4201A75,SH4201A74,SH4201A73,SH4201A72,SH4201A71,SH4201A70,SH4201A7,SH4201A69,SH4201A68,SH4201A67,SH4201A66,SH4201A65,SH4201A649,SH4201A648,SH4201A647,SH4201A646,SH4201A645,SH4201A644,SH4201A643,SH4201A642,SH4201A641,SH4201A640,SH4201A64,SH4201A639,SH4201A638,SH4201A637,SH4201A636,SH4201A635,SH4201A634,SH4201A633,SH4201A632,SH4201A631,SH4201A630,SH4201A63,SH4201A629,SH4201A628,SH4201A627,SH4201A626,SH4201A625,SH4201A624,SH4201A623,SH4201A622,SH4201A621,SH4201A620,SH4201A62,SH4201A619,SH4201A618,SH4201A617,SH4201A616,SH4201A615,SH4201A614,SH4201A613,SH4201A612,SH4201A611,SH4201A610,SH4201A61,SH4201A609,SH4201A608,SH4201A607,SH4201A606,SH4201A605,SH4201A604,SH4201A603,SH4201A602,SH4201A601,SH4201A600,SH4201A60,SH4201A6,SH4201A599,SH4201A598,SH4201A597,SH4201A596,SH4201A595,SH4201A594,SH4201A593,SH4201A592,SH4201A591,SH4201A590,SH4201A59,SH4201A589,SH4201A588,SH4201A587,SH4201A586,SH4201A585,SH4201A584,SH4201A583,SH4201A582,SH4201A581,SH4201A580,SH4201A58,SH4201A579,SH4201A578,SH4201A577,SH4201A576,SH4201A575,SH4201A574,SH4201A573,SH4201A572,SH4201A571,SH4201A570,SH4201A57,SH4201A569,SH4201A568,SH4201A567,SH4201A566,SH4201A565,SH4201A564,SH4201A563,SH4201A562,SH4201A561,SH4201A560,SH4201A56,SH4201A559,SH4201A558,SH4201A557,SH4201A556,SH4201A555,SH4201A554,SH4201A553,SH4201A552,SH4201A551,SH4201A550,SH4201A55,SH4201A549,SH4201A548,SH4201A547,SH4201A546,SH4201A545,SH4201A544,SH4201A543,SH4201A542,SH4201A541,SH4201A540,SH4201A54,SH4201A539,SH4201A538,SH4201A537,SH4201A536,SH4201A535,SH4201A534,SH4201A533,SH4201A532,SH4201A531,SH4201A530,SH4201A53,SH4201A529,SH4201A528,SH4201A527,SH4201A526,SH4201A525,SH4201A524,SH4201A523,SH4201A522,SH4201A521,SH4201A520,SH4201A52,SH4201A519,SH4201A518,SH4201A517,SH4201A516,SH4201A515,SH4201A514,SH4201A513,SH4201A512,SH4201A511,SH4201A510,SH4201A51,SH4201A509,SH4201A508,SH4201A507,SH4201A506,SH4201A505,SH4201A504,SH4201A503,SH4201A502,SH4201A501,SH4201A500,SH4201A50,SH4201A5,SH4201A499,SH4201A498,SH4201A497,SH4201A496,SH4201A495,SH4201A494,SH4201A493,SH4201A492,SH4201A491,SH4201A490,SH4201A49,SH4201A489,SH4201A488,SH4201A487,SH4201A486,SH4201A485,SH4201A484,SH4201A483,SH4201A482,SH4201A481,SH4201A480,SH4201A48,SH4201A479,SH4201A478,SH4201A477,SH4201A476,SH4201A475,SH4201A474,SH4201A473,SH4201A472,SH4201A471,SH4201A470,SH4201A47,SH4201A469,SH4201A468,SH4201A467,SH4201A466,SH4201A465,SH4201A464,SH4201A463,SH4201A462,SH4201A461,SH4201A460,SH4201A46,SH4201A459,SH4201A458,SH4201A457,SH4201A456,SH4201A455,SH4201A454,SH4201A453,SH4201A452,SH4201A451,SH4201A450,SH4201A45,SH4201A449,SH4201A448,SH4201A447,SH4201A446,SH4201A445,SH4201A444,SH4201A443,SH4201A442,SH4201A441,SH4201A440,SH4201A44,SH4201A439,SH4201A438,SH4201A437,SH4201A436,SH4201A435,SH4201A434,SH4201A433,SH4201A432,SH4201A431,SH4201A430,SH4201A43,SH4201A429,SH4201A428,SH4201A427,SH4201A426,SH4201A425,SH4201A424,SH4201A423,SH4201A422,SH4201A421,SH4201A420,SH4201A42,SH4201A419,SH4201A418,SH4201A417,SH4201A416,SH4201A415,SH4201A414,SH4201A413,SH4201A412,SH4201A411,SH4201A410,SH4201A41,SH4201A409,SH4201A408,SH4201A407,SH4201A406,SH4201A405,SH4201A404,SH4201A403,SH4201A402,SH4201A401,SH4201A400,SH4201A40,SH4201A4,SH4201A399,SH4201A398,SH4201A397,SH4201A396,SH4201A395,SH4201A394,SH4201A393,SH4201A392,SH4201A391,SH4201A390,SH4201A39,SH4201A389,SH4201A388,SH4201A387,SH4201A386,SH4201A385,SH4201A384,SH4201A383,SH4201A382,SH4201A381,SH4201A380,SH4201A38,SH4201A379,SH4201A378,SH4201A377,SH4201A376,SH4201A375,SH4201A374,SH4201A373,SH4201A372,SH4201A371,SH4201A370,SH4201A37,SH4201A369,SH4201A368,SH4201A367,SH4201A366,SH4201A365,SH4201A364,SH4201A363,SH4201A362,SH4201A361,SH4201A360,SH4201A36,SH4201A359,SH4201A358,SH4201A357,SH4201A356,SH4201A355,SH4201A354,SH4201A353,SH4201A352,SH4201A351,SH4201A350,SH4201A35,SH4201A349,SH4201A348,SH4201A347,SH4201A346,SH4201A345,SH4201A344,SH4201A343,SH4201A342,SH4201A341,SH4201A340,SH4201A34,SH4201A339,SH4201A338,SH4201A337,SH4201A336,SH4201A335,SH4201A334,SH4201A333,SH4201A332,SH4201A331,SH4201A330,SH4201A33,SH4201A329,SH4201A328,SH4201A327,SH4201A326,SH4201A325,SH4201A324,SH4201A323,SH4201A322,SH4201A321,SH4201A320,SH4201A32,SH4201A319,SH4201A318,SH4201A317,SH4201A316,SH4201A315,SH4201A314,SH4201A313,SH4201A312,SH4201A311,SH4201A310,SH4201A31,SH4201A309,SH4201A308,SH4201A307,SH4201A306,SH4201A305,SH4201A304,SH4201A303,SH4201A302,SH4201A301,SH4201A300,SH4201A30,SH4201A3,SH4201A299,SH4201A298,SH4201A297,SH4201A296,SH4201A295,SH4201A294,SH4201A293,SH4201A292,SH4201A291,SH4201A290,SH4201A29,SH4201A289,SH4201A288,SH4201A287,SH4201A286,SH4201A285,SH4201A284,SH4201A283,SH4201A282,SH4201A281,SH4201A280,SH4201A28,SH4201A279,SH4201A278,SH4201A277,SH4201A276,SH4201A275,SH4201A274,SH4201A273,SH4201A272,SH4201A271,SH4201A270,SH4201A27,SH4201A269,SH4201A268,SH4201A267,SH4201A266,SH4201A265,SH4201A264,SH4201A263,SH4201A262,SH4201A261,SH4201A260,SH4201A26,SH4201A259,SH4201A258,SH4201A257,SH4201A256,SH4201A255,SH4201A254,SH4201A253,SH4201A252,SH4201A251,SH4201A250,SH4201A25,SH4201A249,SH4201A248,SH4201A247,SH4201A246,SH4201A245,SH4201A244,SH4201A243,SH4201A242,SH4201A241,SH4201A240,SH4201A24,SH4201A239,SH4201A238,SH4201A237,SH4201A236,SH4201A235,SH4201A234,SH4201A233,SH4201A232,SH4201A231,SH4201A230,SH4201A23,SH4201A229,SH4201A228,SH4201A227,SH4201A226,SH4201A225,SH4201A224,SH4201A223,SH4201A222,SH4201A221,SH4201A220,SH4201A22,SH4201A219,SH4201A218,SH4201A217,SH4201A216,SH4201A215,SH4201A214,SH4201A213,SH4201A212,SH4201A211,SH4201A210,SH4201A21,SH4201A209,SH4201A208,SH4201A207,SH4201A206,SH4201A205,SH4201A204,SH4201A203,SH4201A202,SH4201A201,SH4201A200,SH4201A20,SH4201A2,SH4201A199,SH4201A198,SH4201A197,SH4201A196,SH4201A195,SH4201A194,SH4201A193,SH4201A192,SH4201A191,SH4201A190,SH4201A19,SH4201A189,SH4201A188,SH4201A187,SH4201A186,SH4201A185,SH4201A184,SH4201A183,SH4201A182,SH4201A181,SH4201A180,SH4201A18,SH4201A179,SH4201A178,SH4201A177,SH4201A176,SH4201A175,SH4201A174,SH4201A173,SH4201A172,SH4201A171,SH4201A170,SH4201A17,SH4201A169,SH4201A168,SH4201A167,SH4201A166,SH4201A165,SH4201A164,SH4201A163,SH4201A162,SH4201A161,SH4201A160,SH4201A16,SH4201A159,SH4201A158,SH4201A157,SH4201A156,SH4201A155,SH4201A154,SH4201A153,SH4201A152,SH4201A151,SH4201A150,SH4201A15,SH4201A149,SH4201A148,SH4201A147,SH4201A146,SH4201A145,SH4201A144,SH4201A143,SH4201A142,SH4201A141,SH4201A140,SH4201A14,SH4201A139,SH4201A138,SH4201A137,SH4201A136,SH4201A135,SH4201A134,SH4201A133,SH4201A132,SH4201A131,SH4201A130,SH4201A13,SH4201A129,SH4201A128,SH4201A127,SH4201A126,SH4201A125,SH4201A124,SH4201A123,SH4201A122,SH4201A121,SH4201A120,SH4201A12,SH4201A119,SH4201A118,SH4201A117,SH4201A116,SH4201A115,SH4201A114,SH4201A113,SH4201A112,SH4201A111,SH4201A110,SH4201A11,SH4201A109,SH4201A108,SH4201A107,SH4201A106,SH4201A105,SH4201A104,SH4201A103,SH4201A102,SH4201A101,SH4201A100,SH4201A10,SH4201A1'
    samples = samples.split(',')
    sample_uris = [clarity.root + 'samples/' + sample for sample in samples]

    print("Getting samples...")
    sample_xmls = clarity.batch_get_xml('samples', sample_uris)
    artifact_uris = [sample_xml.find('artifact').get('uri') for sample_xml in sample_xmls]

    print("Getting artifacts...")
    artifact_xmls = clarity.batch_get_xml('artifacts', artifact_uris)
    containers = [artifact_xml.find('location').find('container') for artifact_xml in artifact_xmls]

    container_dict = {container.get('limsid'): container.get('uri') for container in containers}

    print("Getting containers...")
    container_xmls = clarity.batch_get_xml('containers', container_dict.values())
    barcodes = [container_xml.find('name').text for container_xml in container_xmls]

    print(', '.join(barcodes))
